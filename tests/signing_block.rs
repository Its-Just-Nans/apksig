//! sms2call-1.0.8.apk signing block
//! https://github.com/Its-Just-Nans/sms2call/releases/tag/1.0.8
const BLOCK: [u8; 4096] = [
    // block size
    248, 15, 0, 0, 0, 0, 0, 0, // content
    34, 5, 0, 0, 0, 0, 0, 0, 26, 135, 9, 113, 26, 5, 0, 0, 22, 5, 0, 0, 216, 2, 0, 0, 44, 0, 0, 0,
    40, 0, 0, 0, 3, 1, 0, 0, 32, 0, 0, 0, 189, 55, 153, 217, 57, 107, 160, 81, 142, 205, 153, 84,
    145, 244, 238, 132, 23, 37, 116, 46, 9, 239, 58, 81, 255, 190, 56, 128, 5, 49, 145, 247, 156,
    2, 0, 0, 152, 2, 0, 0, 48, 130, 2, 148, 48, 130, 1, 124, 2, 1, 1, 48, 13, 6, 9, 42, 134, 72,
    134, 247, 13, 1, 1, 11, 5, 0, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 12, 4, 110, 52, 110, 53,
    48, 32, 23, 13, 50, 53, 48, 49, 48, 57, 49, 56, 48, 57, 52, 51, 90, 24, 15, 50, 48, 53, 48, 48,
    49, 48, 51, 49, 56, 48, 57, 52, 51, 90, 48, 15, 49, 13, 48, 11, 6, 3, 85, 4, 3, 12, 4, 110, 52,
    110, 53, 48, 130, 1, 34, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15,
    0, 48, 130, 1, 10, 2, 130, 1, 1, 0, 188, 254, 171, 218, 20, 112, 37, 145, 122, 189, 39, 243,
    205, 232, 250, 242, 42, 121, 73, 19, 136, 183, 205, 159, 127, 238, 154, 210, 149, 49, 42, 44,
    234, 134, 147, 13, 113, 219, 134, 105, 16, 249, 77, 110, 204, 117, 213, 75, 53, 215, 59, 49,
    187, 130, 46, 118, 129, 247, 84, 14, 29, 17, 163, 205, 149, 237, 239, 77, 52, 128, 182, 114,
    93, 179, 43, 140, 196, 55, 245, 179, 196, 150, 126, 254, 19, 50, 30, 177, 24, 11, 4, 162, 33,
    101, 112, 57, 57, 56, 113, 164, 143, 83, 240, 253, 62, 238, 172, 239, 170, 232, 60, 23, 117,
    250, 145, 205, 84, 227, 111, 10, 205, 188, 44, 13, 17, 249, 178, 174, 42, 152, 9, 28, 116, 236,
    194, 174, 83, 150, 55, 237, 187, 59, 85, 94, 144, 215, 156, 195, 243, 106, 45, 161, 188, 72,
    163, 158, 140, 189, 148, 54, 0, 143, 109, 109, 245, 178, 60, 168, 170, 39, 246, 199, 108, 149,
    38, 75, 119, 125, 119, 117, 240, 196, 49, 82, 43, 173, 43, 118, 78, 144, 134, 18, 78, 188, 69,
    145, 48, 25, 60, 14, 181, 152, 120, 45, 240, 37, 136, 98, 59, 198, 220, 151, 173, 114, 250, 76,
    13, 31, 249, 154, 252, 219, 139, 242, 33, 225, 185, 19, 16, 178, 12, 135, 208, 242, 30, 37,
    142, 243, 59, 111, 161, 129, 153, 175, 124, 2, 185, 235, 20, 218, 134, 113, 160, 131, 170, 37,
    2, 3, 1, 0, 1, 48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 11, 5, 0, 3, 130, 1, 1, 0, 161,
    99, 159, 134, 187, 58, 249, 29, 228, 232, 220, 204, 12, 120, 153, 212, 144, 14, 142, 12, 140,
    242, 205, 145, 117, 222, 130, 132, 232, 217, 173, 222, 194, 236, 4, 206, 221, 167, 10, 132, 33,
    5, 45, 4, 35, 0, 57, 147, 122, 14, 152, 41, 36, 84, 126, 56, 122, 6, 202, 78, 21, 123, 193,
    156, 123, 176, 204, 142, 215, 139, 212, 34, 46, 209, 75, 76, 125, 157, 80, 144, 170, 89, 239,
    234, 72, 7, 2, 27, 35, 137, 53, 90, 44, 75, 226, 80, 2, 228, 105, 86, 169, 152, 39, 69, 203,
    202, 112, 147, 60, 93, 209, 249, 176, 200, 179, 106, 113, 105, 58, 195, 164, 110, 146, 89, 92,
    81, 51, 55, 56, 233, 117, 68, 98, 224, 208, 232, 114, 172, 15, 143, 14, 59, 152, 105, 12, 79,
    107, 60, 37, 95, 242, 139, 200, 135, 159, 203, 28, 143, 144, 67, 141, 254, 81, 194, 9, 239,
    236, 19, 45, 59, 124, 157, 12, 19, 112, 222, 177, 119, 78, 146, 42, 63, 25, 254, 54, 245, 13,
    244, 152, 28, 22, 94, 172, 203, 226, 221, 175, 11, 93, 132, 208, 21, 134, 236, 138, 24, 255,
    121, 79, 235, 241, 62, 63, 57, 146, 128, 177, 37, 77, 239, 30, 1, 240, 54, 30, 202, 150, 248,
    182, 214, 206, 184, 121, 32, 102, 24, 191, 140, 45, 117, 245, 167, 76, 122, 12, 250, 139, 93,
    239, 100, 51, 6, 138, 91, 100, 228, 0, 0, 0, 0, 0, 0, 0, 0, 12, 1, 0, 0, 8, 1, 0, 0, 3, 1, 0,
    0, 0, 1, 0, 0, 123, 54, 177, 143, 72, 156, 195, 211, 56, 239, 231, 193, 128, 230, 242, 202,
    147, 18, 249, 222, 179, 154, 233, 126, 94, 94, 75, 215, 40, 226, 236, 43, 107, 78, 14, 100,
    178, 107, 69, 216, 190, 196, 191, 143, 59, 253, 173, 13, 78, 108, 235, 52, 3, 186, 162, 182,
    172, 2, 232, 9, 75, 185, 100, 53, 140, 170, 57, 223, 40, 229, 74, 201, 225, 222, 13, 31, 101,
    107, 55, 95, 34, 67, 233, 15, 236, 17, 30, 169, 197, 20, 47, 177, 110, 96, 206, 79, 15, 180,
    147, 143, 110, 230, 89, 84, 192, 24, 41, 65, 176, 120, 213, 40, 22, 12, 125, 57, 201, 58, 157,
    53, 138, 52, 128, 29, 32, 26, 200, 248, 10, 45, 239, 94, 193, 213, 104, 4, 189, 201, 231, 3,
    192, 44, 151, 4, 191, 90, 38, 160, 106, 178, 111, 198, 135, 190, 254, 41, 150, 140, 41, 187,
    232, 236, 102, 203, 71, 217, 122, 193, 238, 215, 33, 168, 196, 176, 238, 164, 202, 158, 77, 63,
    7, 135, 81, 60, 182, 141, 20, 2, 117, 202, 104, 154, 65, 61, 195, 236, 92, 242, 59, 181, 194,
    185, 180, 64, 215, 180, 226, 253, 86, 36, 190, 228, 244, 208, 221, 255, 87, 113, 253, 192, 180,
    96, 66, 120, 26, 11, 6, 226, 142, 196, 138, 120, 7, 115, 210, 230, 187, 229, 45, 25, 5, 234,
    242, 217, 0, 230, 107, 197, 57, 247, 27, 73, 157, 240, 202, 86, 38, 1, 0, 0, 48, 130, 1, 34,
    48, 13, 6, 9, 42, 134, 72, 134, 247, 13, 1, 1, 1, 5, 0, 3, 130, 1, 15, 0, 48, 130, 1, 10, 2,
    130, 1, 1, 0, 188, 254, 171, 218, 20, 112, 37, 145, 122, 189, 39, 243, 205, 232, 250, 242, 42,
    121, 73, 19, 136, 183, 205, 159, 127, 238, 154, 210, 149, 49, 42, 44, 234, 134, 147, 13, 113,
    219, 134, 105, 16, 249, 77, 110, 204, 117, 213, 75, 53, 215, 59, 49, 187, 130, 46, 118, 129,
    247, 84, 14, 29, 17, 163, 205, 149, 237, 239, 77, 52, 128, 182, 114, 93, 179, 43, 140, 196, 55,
    245, 179, 196, 150, 126, 254, 19, 50, 30, 177, 24, 11, 4, 162, 33, 101, 112, 57, 57, 56, 113,
    164, 143, 83, 240, 253, 62, 238, 172, 239, 170, 232, 60, 23, 117, 250, 145, 205, 84, 227, 111,
    10, 205, 188, 44, 13, 17, 249, 178, 174, 42, 152, 9, 28, 116, 236, 194, 174, 83, 150, 55, 237,
    187, 59, 85, 94, 144, 215, 156, 195, 243, 106, 45, 161, 188, 72, 163, 158, 140, 189, 148, 54,
    0, 143, 109, 109, 245, 178, 60, 168, 170, 39, 246, 199, 108, 149, 38, 75, 119, 125, 119, 117,
    240, 196, 49, 82, 43, 173, 43, 118, 78, 144, 134, 18, 78, 188, 69, 145, 48, 25, 60, 14, 181,
    152, 120, 45, 240, 37, 136, 98, 59, 198, 220, 151, 173, 114, 250, 76, 13, 31, 249, 154, 252,
    219, 139, 242, 33, 225, 185, 19, 16, 178, 12, 135, 208, 242, 30, 37, 142, 243, 59, 111, 161,
    129, 153, 175, 124, 2, 185, 235, 20, 218, 134, 113, 160, 131, 170, 37, 2, 3, 1, 0, 1, 174, 10,
    0, 0, 0, 0, 0, 0, 119, 101, 114, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // block size
    248, 15, 0, 0, 0, 0, 0, 0, // magic
    65, 80, 75, 32, 83, 105, 103, 32, 66, 108, 111, 99, 107, 32, 52, 50,
];

mod test {

    use super::*;
    use apksig::{SigningBlock, ValueSigningBlock, MAGIC, MAGIC_LEN};

    #[test]
    fn test_constants() {
        let magic_vec = [
            65, 80, 75, 32, 83, 105, 103, 32, 66, 108, 111, 99, 107, 32, 52, 50,
        ];
        assert_eq!(MAGIC, &magic_vec);
        assert_eq!(MAGIC_LEN, 16);
    }

    #[test]
    fn test_signing_block() {
        let file_len = BLOCK.len();
        let reader = std::io::Cursor::new(&BLOCK[..]);
        let sig = SigningBlock::extract(reader, file_len, 0);
        assert!(sig.is_ok());
        let sig = sig.unwrap();
        assert_eq!(&sig.magic, MAGIC);
        let content_size = BLOCK.len() - 8 - 8 - MAGIC_LEN; // two u64 (8 bytes) and magic_len (64 bytes)
        assert_eq!(sig.content_size, content_size);
        assert_eq!(sig.file_offset_start, 0);
        assert_eq!(sig.file_offset_end, BLOCK.len());
        assert_eq!(sig.start_size, sig.end_size);
        assert_eq!(sig.content.len(), 2);
        if let ValueSigningBlock::SignatureSchemeV2Block(block) = &sig.content[0] {
            assert_eq!(block.size, 1314);
            assert_eq!(block.id, 0x7109871a);
            assert_eq!(block.signers.len(), 1);
            let signer = &block.signers[0];
            assert_eq!(signer.size, 1302);
            assert_eq!(signer.signed_data.digests.digests_data.len(), 1);
            assert_eq!(signer.signed_data.certificates.certificates_data.len(), 1);
            assert_eq!(
                signer
                    .signed_data
                    .additional_attributes
                    .additional_attributes_data
                    .len(),
                0
            );
            assert_eq!(signer.signatures.signatures_data.len(), 1);
            assert_eq!(signer.pub_key.data.len(), 294);
        } else {
            panic!(
                "Expected ValueSigningBlock::SignatureSchemeV2Block() but got {:?}",
                sig.content[0]
            );
        }
        if let ValueSigningBlock::BaseSigningBlock(block) = &sig.content[1] {
            assert_eq!(block.size, 2734);
            assert_eq!(block.id, 0x42726577); // padding block
        } else {
            panic!(
                "Expected ValueSigningBlock::BaseSigningBlock() but got {:?}",
                sig.content[1]
            );
        }
    }
}
